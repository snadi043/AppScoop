{"ast":null,"code":"import { call, put, takeEvery, all } from 'redux-saga/effects';\nimport { FETCH_BOOKS, FETCH_BOOKS_FAILED, FETCH_BOOKS_SUCCESS } from '../bookTypes';\nconst apiUrl = `https://www.googleapis.com/books/v1/volumes?filter=free-ebooks&q=a`;\nexport function fetchBooksApi() {\n  return fetch(apiUrl, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).catch(error => {\n    throw error;\n  });\n}\nexport function* fetchBooks(action) {\n  try {\n    const books = yield call(fetchBooksApi);\n    yield put({\n      type: FETCH_BOOKS_SUCCESS,\n      books: books\n    });\n  } catch (e) {\n    yield put({\n      type: FETCH_BOOKS_FAILED,\n      message: 'Failed to fetch resources. Please try again!!!'\n    });\n  }\n}\nexport function* booksSaga() {\n  yield takeEvery(FETCH_BOOKS, fetchBooks);\n}\nexport default function* rootSaga() {\n  yield all([booksSaga()]);\n}","map":{"version":3,"sources":["/Users/saiharnadhnadipalli/Desktop/ebooks/src/redux/saga/booksSaga.js"],"names":["call","put","takeEvery","all","FETCH_BOOKS","FETCH_BOOKS_FAILED","FETCH_BOOKS_SUCCESS","apiUrl","fetchBooksApi","fetch","method","headers","then","response","json","catch","error","fetchBooks","action","books","type","e","message","booksSaga","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,QAA0C,oBAA1C;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,mBAA1C,QAAqE,cAArE;AAEA,MAAMC,MAAM,GAAI,oEAAhB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOC,KAAK,CAACF,MAAD,EAAS;AACjBG,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFQ,GAAT,CAAL,CAMJC,IANI,CAMCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,EAOFC,KAPE,CAOKC,KAAD,IAAW;AAAE,UAAMA,KAAN;AAAa,GAP9B,CAAP;AAQH;AAED,OAAO,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAChC,MAAI;AACA,UAAMC,KAAK,GAAG,MAAMnB,IAAI,CAACQ,aAAD,CAAxB;AACA,UAAMP,GAAG,CAAC;AAAEmB,MAAAA,IAAI,EAAEd,mBAAR;AAA6Ba,MAAAA,KAAK,EAAEA;AAApC,KAAD,CAAT;AACH,GAHD,CAGE,OAAOE,CAAP,EAAU;AACR,UAAMpB,GAAG,CAAC;AAAEmB,MAAAA,IAAI,EAAEf,kBAAR;AAA4BiB,MAAAA,OAAO,EAAE;AAArC,KAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAMrB,SAAS,CAACE,WAAD,EAAca,UAAd,CAAf;AACH;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMrB,GAAG,CAAC,CACNoB,SAAS,EADH,CAAD,CAAT;AAGH","sourcesContent":["import { call, put, takeEvery, all } from 'redux-saga/effects'\r\nimport { FETCH_BOOKS, FETCH_BOOKS_FAILED, FETCH_BOOKS_SUCCESS } from '../bookTypes';\r\n\r\nconst apiUrl = `https://www.googleapis.com/books/v1/volumes?filter=free-ebooks&q=a`;\r\n\r\nexport function fetchBooksApi() {\r\n    return fetch(apiUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n        }\r\n    }).then(response => response.json())\r\n        .catch((error) => { throw error })\r\n}\r\n\r\nexport function* fetchBooks(action) {\r\n    try {\r\n        const books = yield call(fetchBooksApi);\r\n        yield put({ type: FETCH_BOOKS_SUCCESS, books: books });\r\n    } catch (e) {\r\n        yield put({ type: FETCH_BOOKS_FAILED, message: 'Failed to fetch resources. Please try again!!!' });\r\n    }\r\n}\r\n\r\nexport function* booksSaga() {\r\n    yield takeEvery(FETCH_BOOKS, fetchBooks);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        booksSaga(),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}