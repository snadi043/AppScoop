{"ast":null,"code":"var _jsxFileName = \"/Users/saiharnadhnadipalli/Desktop/ebooks/src/components/homepage.js\",\n    _s = $RefreshSig$();\n\nimport { Snackbar, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { fetchBooks, selectedBook } from \"../redux/booksActions\";\nimport bookDisplay from \"../hoc/BookDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '70%'\n  },\n  container: {\n    maxHeight: 600\n  },\n  tableIcons: {\n    cursor: 'pointer'\n  }\n});\n\nconst HomePage = () => {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const booksList = useSelector(state => state.booksList.items);\n  const error = useSelector(state => state.error);\n  useEffect(() => {\n    dispatch(fetchBooks()); // eslint-disable-next-line \n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleRowClick = e => {\n    dispatch(selectedBook(e));\n    history.push('/bookdetails');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Books List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                style: {\n                  minWidth: 150\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 81\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                style: {\n                  minWidth: 150\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 81\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: booksList && booksList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => handleRowClick(row),\n                hover: true,\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row.volumeInfo.imageLinks.smallThumbnail,\n                    alt: \"book\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.volumeInfo.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: booksList ? booksList.length : 0,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error ? true : false,\n      autoHideDuration: 3000,\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n};\n\n_s(HomePage, \"ovKEPfGX0xhaRtE3306ub51QID8=\", false, function () {\n  return [useStyles, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = HomePage;\nexport default _c2 = bookDisplay(HomePage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HomePage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/saiharnadhnadipalli/Desktop/ebooks/src/components/homepage.js"],"names":["Snackbar","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","makeStyles","useEffect","useState","useDispatch","useSelector","useHistory","fetchBooks","selectedBook","bookDisplay","useStyles","root","width","container","maxHeight","tableIcons","cursor","HomePage","page","setPage","rowsPerPage","setRowsPerPage","classes","history","dispatch","booksList","state","items","error","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","handleRowClick","e","push","minWidth","slice","map","row","index","volumeInfo","imageLinks","smallThumbnail","title","id","length"],"mappings":"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","sourcesContent":["import { Snackbar, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { fetchBooks, selectedBook } from \"../redux/booksActions\";\r\nimport bookDisplay from \"../hoc/BookDisplay\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '70%',\r\n    },\r\n    container: {\r\n        maxHeight: 600,\r\n    },\r\n    tableIcons: {\r\n        cursor: 'pointer'\r\n    }\r\n});\r\nconst HomePage = () => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const booksList = useSelector(state => state.booksList.items);\r\n    const error = useSelector(state => state.error);\r\n    useEffect(() => {\r\n        dispatch(fetchBooks());\r\n        // eslint-disable-next-line \r\n    }, [])\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleRowClick = (e) => {\r\n        dispatch(selectedBook(e));\r\n        history.push('/bookdetails');\r\n    }\r\n\r\n\r\n    return (<>\r\n        {!error ? <div >\r\n            <h1>Books List</h1>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\" style={{ minWidth: 150 }}><strong>Image</strong></TableCell>\r\n                            <TableCell align=\"center\" style={{ minWidth: 150 }}><strong>Title</strong></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {booksList && booksList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                            return (\r\n                                <TableRow onClick={() => handleRowClick(row)} hover tabIndex={-1} key={row.id}>\r\n                                    <TableCell align='center' >\r\n                                        <img src={row.volumeInfo.imageLinks.smallThumbnail} alt=\"book\" />\r\n                                    </TableCell>\r\n                                    <TableCell align='center'>\r\n                                        {row.volumeInfo.title}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={booksList ? booksList.length : 0}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </div> : <Snackbar\r\n            open={error ? true : false}\r\n            autoHideDuration={3000}\r\n            message={error}\r\n        />}</>);\r\n}\r\n\r\nexport default bookDisplay(HomePage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}